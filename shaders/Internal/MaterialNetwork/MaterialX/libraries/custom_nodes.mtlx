<?xml version="1.0"?>
<materialx version="1.38">

  <!--
    Node: <burley_diffuse_bsdf>
    A BSDF node for Burley diffuse reflection.
  -->
  <nodedef name="ND_beer_bsdf" node="beer_bsdf" bsdf="R" nodegroup="pbr" doc="A BSDF node for Beer's Law.">
    <input name="weight" type="float" value="1.0" uimin="0.0" uimax="1.0" />
    <input name="absorption" type="color3" value="0.18, 0.18, 0.18" />
    <input name="pathshortening" type="float" value="1" />
    <input name="normal" type="vector3" defaultgeomprop="Nworld" />
    <output name="out" type="BSDF" />
  </nodedef>

  <implementation name="IM_beer_bsdf_genslang" nodedef="ND_beer_bsdf" file="pbrlib/genslang/mx_beer_bsdf.slang" function="mx_beer_bsdf" target="genslang" />
  <!-- Backup -->
  <nodegraph name="IM_beer_bsdf_fallback" nodedef="ND_beer_bsdf" target="genosl,genglsl,genmdl">
    <ln name="deexp" type="color3">
        <input name="in" type="color3" interfacename="absorption" />
    </ln>
    <dielectric_bsdf name="dielectric" type="BSDF">
        <input name="weight" type="float" interfacename="weight" />
        <input name="tint" type="color3" nodename="deexp" />
        <input name="ior" type="float" value="1" />
    </dielectric_bsdf>
    <output name="out" type="BSDF" nodename="dielectric" />
  </nodegraph>

  <!--
    Node: <dielectricplate_bsdf>
    A BSDF node for architectural glass.
  -->
  <nodedef name="ND_dielectricplate_bsdf" node="dielectricplate_bsdf" bsdf="R" nodegroup="pbr" doc="A BSDF node for architectural glass.">
    <input name="weight" type="float" value="1.0" uimin="0.0" uimax="1.0" />
    <input name="tint" type="color3" value="1.0, 1.0, 1.0" />
    <input name="ior" type="float" value="1.5" />
    <input name="roughness" type="vector2" value="0.05, 0.05" />
    <input name="normal" type="vector3" defaultgeomprop="Nworld" />
    <input name="tangent" type="vector3" defaultgeomprop="Tworld" />
    <input name="distribution" type="string" value="ggx" />
    <output name="out" type="BSDF" />
  </nodedef>

  <implementation name="IM_dielectricplate_bsdf_genslang" nodedef="ND_dielectricplate_bsdf" file="pbrlib/genslang/mx_dielectricplate_bsdf.slang" function="mx_dielectricplate_bsdf" target="genslang" />
  <!-- Backup -->
  <nodegraph name="IM_dielectricplate_bsdf_fallback" nodedef="ND_dielectricplate_bsdf" target="genosl,genglsl,genmdl">
    <dielectric_bsdf name="dielectric" type="BSDF">
        <input name="weight" type="float" interfacename="weight" />
    </dielectric_bsdf>
    <output name="out" type="BSDF" nodename="dielectric" />
  </nodegraph>

    <!--
    Node: <scratchconductor_brdf>
    A conductor with microscratches.
  -->
  <nodedef name="ND_scratchconductor_brdf" node="scratchconductor_brdf" bsdf="R" nodegroup="pbr" doc="A conductor with microscratches.">
    <input name="weight" type="float" value="1.0" uimin="0.0" uimax="1.0" />
    <input name="ior" type="color3" value="0.18, 0.18, 0.18" />
    <input name="extinction" type="color3" value="0.18, 0.18, 0.18" />
    <input name="roughness" type="vector2" value="0.05, 0.05f" />
    <input name="scratchdirection" type="vector3" value="1.0, 0.5, 0.5" />
    <input name="depth" type="float" value="1.0" />
    <input name="mask" type="vector3" value="0.0, 0.0, 0.0" />
    <input name="scratchRoughness" type="float" value="0.00632" />
    <input name="normal" type="vector3" defaultgeomprop="Nworld" />
    <input name="tangent" type="vector3" defaultgeomprop="Tworld" />
    <input name="distribution" type="string" value="ggx" />
    <output name="out" type="BSDF" />
  </nodedef>

  <implementation name="IM_scratchconductor_brdf_genslang" nodedef="ND_scratchconductor_brdf" file="pbrlib/genslang/mx_scratchconductor_brdf.slang" function="mx_scratchconductor_brdf" target="genslang" />
  <!-- Backup -->
  <nodegraph name="IM_scratchconductor_brdf_fallback" nodedef="ND_scratchconductor_brdf" target="genosl,genglsl,genmdl">
    <conductor_bsdf name="conductor" type="BSDF">
        <input name="weight" type="float" interfacename="weight" />
        <input name="ior" type="color3" value="0.18, 0.18, 0.18" />
        <input name="extinction" type="color3" value="0.18, 0.18, 0.18" />
    </conductor_bsdf>
    <output name="out" type="BSDF" nodename="conductor" />
  </nodegraph>

  <!--
    Node: <weighted_layer>
    A layering node that has weight for the coat.
  -->
  <nodedef name="ND_weighted_layer_bsdf" node="weighted_layer" nodegroup="pbr" defaultinput="top" doc="Layer two BSDF's with vertical layering, allowing color3 weight for the top layer.">
    <input name="top" type="BSDF" value="" />
    <input name="top_weight" type="color3" value="1, 1, 1" />
    <input name="base" type="BSDF" value="" />
    <output name="out" type="BSDF" />
  </nodedef>

  <implementation name="IM_weighted_layer_bsdf_genslang" nodedef="ND_weighted_layer_bsdf" file="pbrlib/genslang/mx_ops_layer.slang" function="mx_weighted_layer_bsdf" target="genslang" />

  <!-- Backup -->
  <nodegraph name="IM_beer_bsdf_fallback" nodedef="ND_beer_bsdf" target="genosl,genglsl,genmdl">
    <dielectric_bsdf name="simpleBTDF" type="BSDF">
        <input name="ior" type="float" value="1" />
    </dielectric_bsdf>
    <mix name="topMix" type="BSDF">
        <input name="fg" type="BSDF" interfacename="top" />
        <input name="bg" type="BSDF" value="simpleBTDF" />
        <input name="mix" type="float" interfacename="top_weight" channels="x" />
    </mix>
    <layer name="layer" type="BSDF">
        <input name="top" type="BSDF" nodename="topMix" />
        <input name="base" type="BSDF" interfacename="base" />
    </layer>
    <output name="out" type="BSDF" nodename="layer"/>
  </nodegraph>


</materialx>
