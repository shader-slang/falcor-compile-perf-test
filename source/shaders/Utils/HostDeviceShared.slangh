/***************************************************************************
 # Copyright (c) 2015-23, NVIDIA CORPORATION. All rights reserved.
 # Copyright 2024 The Khronos Group, Inc.
 **************************************************************************/
#pragma once

/*******************************************************************
                    Glue code for CPU/GPU compilation
*******************************************************************/

#if (defined(__STDC_HOSTED__) || defined(__cplusplus)) // we're in C-compliant compiler, probably host
#define HOST_CODE 1
#endif

// TODO: Replace by bit packing functions
#define EXTRACT_BITS(bits, offset, value) (((value) >> (offset)) & ((1 << (bits)) - 1))
#define IS_BIT_SET(value, bitOffset) ((value & (1 << bitOffset)) != 0)
// TODO: Add check that "value" fits into "bits"
#define PACK_BITS(bits, offset, flags, value) \
    ((((value) & ((1 << (bits)) - 1)) << (offset)) | ((flags) & (~(((1 << (bits)) - 1) << (offset)))))
#define PACK_BITS_UNSAFE(bits, offset, flags, value) (((value) << (offset)) | ((flags) & (~(((1 << (bits)) - 1) << (offset)))))

#ifdef HOST_CODE
/*******************************************************************
                    CPU declarations
*******************************************************************/
#define BEGIN_NAMESPACE(name) \
    namespace name            \
    {
#define END_NAMESPACE }
#define BEGIN_NAMESPACE_FALCOR BEGIN_NAMESPACE(Falcor)
#define END_NAMESPACE_FALCOR END_NAMESPACE

#define SETTER_DECL
#define CONST_FUNCTION const
#define STD_NAMESPACE std::

#include "Core/Enum.h"
#include "Utils/Math/ScalarMath.h"
#include "Utils/Math/Vector.h"
#include "Utils/Math/Matrix.h"
#include <algorithm>

namespace Falcor
{
    using math::sign;
    using math::f16tof32;
    using math::f32tof16;
    using math::asfloat;
    using math::asfloat16;
    using math::asint;
    using math::asuint;
    using math::asuint16;
}

#else // HOST_CODE

/*******************************************************************
                    HLSL declarations
*******************************************************************/
#define inline
#define constexpr const
#define BEGIN_NAMESPACE_FALCOR
#define END_NAMESPACE_FALCOR
#define BEGIN_NAMESPACE(name)
#define END_NAMESPACE
#define SETTER_DECL [mutating]
#define CONST_FUNCTION
#define STD_NAMESPACE

#define FALCOR_ENUM_INFO(T, ...)
#define FALCOR_ENUM_REGISTER(T)

#endif // HOST_CODE
